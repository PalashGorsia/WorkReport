plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 34
    defaultConfig {
        minSdk 26
        targetSdk 34
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
       // viewBinding true
        dataBinding true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    kapt {
        correctErrorTypes true
    }
    flavorDimensions "default"
    productFlavors{
        staging{
            applicationId "${application_id}"
            dimension "default"
            versionCode versionCode
            versionName versionName
            buildConfigField ("String","BASE_URL",URL_DEB)
          //  buildConfigField ("String", "STRIPE_PUBLISH_KEY",STRIPE_PUBLISH_KEY)
        }
        production{
            applicationId "${application_id}"
            dimension "default"
            versionCode 3
            versionName versionName
            buildConfigField ("String","BASE_URL",URL_PRO)
           // buildConfigField ("String", "STRIPE_PUBLISH_KEY",STRIPE_PUBLISH_KEY)
        }
        demo{
            applicationId "${application_idsdj}"
            dimension "default"
            versionCode versionCode
            versionName versionName
            buildConfigField ("String","BASE_URL",URL_DEMO)
           // buildConfigField ("String", "STRIPE_PUBLISH_KEY",STRIPE_PUBLISH_KEY)
        }
    }

}

dependencies {

    def room_version = "2.5.1"
    def coroutines_version ="1.5.2"
    def retrofit_version ="2.9.0"
    def nav_version = "2.5.3"
    def work_version = "2.8.1"
   /*core Libraries */
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    /*Google Services*/
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    implementation 'com.google.android.gms:play-services-auth-api-phone:18.0.1'

     /*Coroutines*/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    /*retrofit*/
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation("com.squareup.okhttp3:logging-interceptor:4.9.1")
    implementation 'com.squareup.picasso:picasso:2.71828'
    //Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"


    //WorkManager Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")

    // optional - Test helpers
    androidTestImplementation("androidx.work:work-testing:$work_version")


    /*Hilt */
    implementation("com.google.dagger:hilt-android:2.39.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    //Inject WorkManager with Hilt
    implementation("androidx.hilt:hilt-work:1.0.0")

    //Navigation
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'
    //Firebase
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.3.0')
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'

    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'


    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // touch image view
    implementation 'com.github.MikeOrtiz:TouchImageView:3.0.1'

    //SDP-SSP
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    //for otp
    implementation 'io.github.chaosleung:pinview:1.4.4'
    //paging3
    implementation "androidx.paging:paging-runtime-ktx:3.1.1"
    implementation "androidx.room:room-paging:$room_version"
    
    implementation 'com.github.dhaval2404:imagepicker:2.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.nabinbhandari.android:permissions:3.8'
}